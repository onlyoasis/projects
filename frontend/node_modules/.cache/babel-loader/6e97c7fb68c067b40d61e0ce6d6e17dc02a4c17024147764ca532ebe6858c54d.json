{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\.cursor-tutor\\\\projects\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table, Card, Row, Col, Select, Input, Space, Typography, Statistic, message, Dropdown, Button, Menu } from 'antd';\nimport { ReloadOutlined, DownOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\nconst {\n  Search\n} = Input;\nconst App = () => {\n  _s();\n  var _data$;\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchText, setSearchText] = useState('');\n  const [filterType, setFilterType] = useState('all');\n  const [dataFiles, setDataFiles] = useState([]);\n  const [currentFile, setCurrentFile] = useState('最新数据');\n  useEffect(() => {\n    fetchData();\n    fetchDataFiles();\n  }, []);\n  const fetchData = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('/api/latest');\n      if (!response.ok) {\n        throw new Error('未能获取数据');\n      }\n      const json = await response.json();\n      setData(json);\n      message.success('数据加载成功');\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      message.error('数据加载失败');\n      // 使用模拟数据作为后备\n      import('./mockData').then(module => {\n        setData(module.mockDiskData);\n        message.warning('加载了模拟数据');\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchDataFiles = async () => {\n    try {\n      const response = await fetch('/api/files');\n      if (!response.ok) {\n        throw new Error('未能获取文件列表');\n      }\n      const json = await response.json();\n      setDataFiles(json);\n    } catch (error) {\n      console.error('Error fetching file list:', error);\n    }\n  };\n  const loadFileData = async filename => {\n    setLoading(true);\n    try {\n      const response = await fetch(`/api/file/${filename}`);\n      if (!response.ok) {\n        throw new Error(`未能加载文件 ${filename}`);\n      }\n      const json = await response.json();\n      setData(json);\n      setCurrentFile(filename);\n      message.success(`成功加载文件: ${filename}`);\n    } catch (error) {\n      console.error('Error loading file:', error);\n      message.error(`加载文件失败: ${filename}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const columns = [{\n    title: '产品名称',\n    dataIndex: 'product_name',\n    render: (text, record) => /*#__PURE__*/_jsxDEV(\"a\", {\n      href: record.product_url,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this),\n    sorter: (a, b) => a.product_name.localeCompare(b.product_name)\n  }, {\n    title: '容量',\n    dataIndex: 'capacity',\n    sorter: (a, b) => {\n      // 处理容量值以便排序\n      const getValue = str => {\n        const num = parseFloat(str.replace(/[^0-9.]/g, ''));\n        if (str.includes('TB')) return num * 1000;\n        return num;\n      };\n      return getValue(a.capacity) - getValue(b.capacity);\n    }\n  }, {\n    title: '价格',\n    dataIndex: 'price',\n    sorter: (a, b) => {\n      const aNum = parseFloat(a.price.replace(/[^0-9.]/g, ''));\n      const bNum = parseFloat(b.price.replace(/[^0-9.]/g, ''));\n      return aNum - bNum;\n    }\n  }, {\n    title: '每TB价格',\n    dataIndex: 'price_per_tb',\n    sorter: (a, b) => {\n      const aNum = parseFloat(a.price_per_tb.replace(/[^0-9.]/g, ''));\n      const bNum = parseFloat(b.price_per_tb.replace(/[^0-9.]/g, ''));\n      return aNum - bNum;\n    }\n  }, {\n    title: '接口',\n    dataIndex: 'interface',\n    filters: [{\n      text: 'SATA',\n      value: 'SATA'\n    }, {\n      text: 'NVMe',\n      value: 'NVMe'\n    }, {\n      text: 'USB',\n      value: 'USB'\n    }],\n    onFilter: (value, record) => record.interface.includes(value)\n  }, {\n    title: '硬盘形态',\n    dataIndex: 'form_factor'\n  }, {\n    title: '卖家',\n    dataIndex: 'seller',\n    render: (text, record) => /*#__PURE__*/_jsxDEV(\"a\", {\n      href: record.seller_url,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this)\n  }, {\n    title: '评分',\n    dataIndex: 'rating'\n  }];\n  const filteredData = data.filter(item => {\n    var _item$product_name;\n    const matchesSearch = (_item$product_name = item.product_name) === null || _item$product_name === void 0 ? void 0 : _item$product_name.toLowerCase().includes(searchText.toLowerCase());\n    const matchesType = filterType === 'all' || item.interface && item.interface.includes(filterType);\n    return matchesSearch && matchesType;\n  });\n\n  // 创建文件选择菜单\n  const fileMenu = /*#__PURE__*/_jsxDEV(Menu, {\n    onClick: ({\n      key\n    }) => loadFileData(key),\n    items: dataFiles.map(file => ({\n      key: file.name,\n      label: `${file.name} (${new Date(file.date).toLocaleDateString()})`\n    }))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n\n  // 计算价格统计数据\n  const getPriceStats = () => {\n    if (!data.length) return {\n      min: 0,\n      max: 0,\n      avg: 0\n    };\n    const prices = data.map(item => parseFloat(item.price.replace(/[^0-9.]/g, ''))).filter(num => !isNaN(num));\n    return {\n      min: Math.min(...prices),\n      max: Math.max(...prices),\n      avg: prices.reduce((sum, price) => sum + price, 0) / prices.length\n    };\n  };\n  const priceStats = getPriceStats();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '24px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      level: 2,\n      children: \"\\u786C\\u76D8\\u4EF7\\u683C\\u76D1\\u63A7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [16, 16],\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Statistic, {\n            title: \"\\u603B\\u4EA7\\u54C1\\u6570\",\n            value: data.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Statistic, {\n            title: \"\\u6570\\u636E\\u66F4\\u65B0\\u65F6\\u95F4\",\n            value: ((_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.date_scraped) || '-'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Statistic, {\n            title: \"\\u5E73\\u5747\\u4EF7\\u683C\",\n            value: priceStats.avg.toFixed(2),\n            prefix: \"$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Statistic, {\n            title: \"\\u4EF7\\u683C\\u8303\\u56F4\",\n            value: `$${priceStats.min.toFixed(2)} - $${priceStats.max.toFixed(2)}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        marginTop: '24px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Space, {\n        style: {\n          marginBottom: '16px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Search, {\n          placeholder: \"\\u641C\\u7D22\\u4EA7\\u54C1\",\n          onChange: e => setSearchText(e.target.value),\n          style: {\n            width: 200\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          defaultValue: \"all\",\n          style: {\n            width: 120\n          },\n          onChange: value => setFilterType(value),\n          options: [{\n            value: 'all',\n            label: '全部类型'\n          }, {\n            value: 'SATA',\n            label: 'SATA'\n          }, {\n            value: 'NVMe',\n            label: 'NVMe'\n          }, {\n            value: 'USB',\n            label: 'USB'\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          icon: /*#__PURE__*/_jsxDEV(ReloadOutlined, {\n            spin: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 19\n          }, this),\n          onClick: fetchData,\n          children: \"\\u5237\\u65B0\\u6570\\u636E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          overlay: fileMenu,\n          disabled: dataFiles.length === 0,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: [currentFile, \" \", /*#__PURE__*/_jsxDEV(DownOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        dataSource: filteredData,\n        loading: loading,\n        rowKey: (record, index) => `${record.product_name}-${index}`,\n        pagination: {\n          pageSize: 10\n        },\n        scroll: {\n          x: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"6nikbrZupn4NlBauKqhS2pnpyzI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Table","Card","Row","Col","Select","Input","Space","Typography","Statistic","message","Dropdown","Button","Menu","ReloadOutlined","DownOutlined","jsxDEV","_jsxDEV","Title","Search","App","_s","_data$","data","setData","loading","setLoading","searchText","setSearchText","filterType","setFilterType","dataFiles","setDataFiles","currentFile","setCurrentFile","fetchData","fetchDataFiles","response","fetch","ok","Error","json","success","error","console","then","module","mockDiskData","warning","loadFileData","filename","columns","title","dataIndex","render","text","record","href","product_url","target","rel","children","fileName","_jsxFileName","lineNumber","columnNumber","sorter","a","b","product_name","localeCompare","getValue","str","num","parseFloat","replace","includes","capacity","aNum","price","bNum","price_per_tb","filters","value","onFilter","interface","seller_url","filteredData","filter","item","_item$product_name","matchesSearch","toLowerCase","matchesType","fileMenu","onClick","key","items","map","file","name","label","Date","date","toLocaleDateString","getPriceStats","length","min","max","avg","prices","isNaN","Math","reduce","sum","priceStats","style","padding","level","gutter","span","date_scraped","toFixed","prefix","marginTop","marginBottom","placeholder","onChange","e","width","defaultValue","options","type","icon","spin","overlay","disabled","dataSource","rowKey","index","pagination","pageSize","scroll","x","_c","$RefreshReg$"],"sources":["C:/Users/Admin/.cursor-tutor/projects/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n  Table, \r\n  Card, \r\n  Row, \r\n  Col, \r\n  Select, \r\n  Input, \r\n  Space,\r\n  Typography,\r\n  Statistic,\r\n  message,\r\n  Dropdown,\r\n  Button,\r\n  Menu\r\n} from 'antd';\r\nimport { ReloadOutlined, DownOutlined } from '@ant-design/icons';\r\nimport type { ColumnsType } from 'antd/es/table';\r\n\r\nconst { Title } = Typography;\r\nconst { Search } = Input;\r\n\r\ninterface DiskPrice {\r\n  product_name: string;\r\n  capacity: string;\r\n  price: string;\r\n  price_per_tb: string;\r\n  interface: string;\r\n  form_factor: string;\r\n  seller: string;\r\n  rating?: string;\r\n  product_url?: string;\r\n  seller_url?: string;\r\n  date_scraped: string;\r\n}\r\n\r\ninterface DataFile {\r\n  name: string;\r\n  size: number;\r\n  date: string;\r\n  path: string;\r\n}\r\n\r\nconst App: React.FC = () => {\r\n  const [data, setData] = useState<DiskPrice[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [filterType, setFilterType] = useState('all');\r\n  const [dataFiles, setDataFiles] = useState<DataFile[]>([]);\r\n  const [currentFile, setCurrentFile] = useState<string>('最新数据');\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    fetchDataFiles();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch('/api/latest');\r\n      if (!response.ok) {\r\n        throw new Error('未能获取数据');\r\n      }\r\n      const json = await response.json();\r\n      setData(json);\r\n      message.success('数据加载成功');\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n      message.error('数据加载失败');\r\n      // 使用模拟数据作为后备\r\n      import('./mockData').then(module => {\r\n        setData(module.mockDiskData);\r\n        message.warning('加载了模拟数据');\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchDataFiles = async () => {\r\n    try {\r\n      const response = await fetch('/api/files');\r\n      if (!response.ok) {\r\n        throw new Error('未能获取文件列表');\r\n      }\r\n      const json = await response.json();\r\n      setDataFiles(json);\r\n    } catch (error) {\r\n      console.error('Error fetching file list:', error);\r\n    }\r\n  };\r\n\r\n  const loadFileData = async (filename: string) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(`/api/file/${filename}`);\r\n      if (!response.ok) {\r\n        throw new Error(`未能加载文件 ${filename}`);\r\n      }\r\n      const json = await response.json();\r\n      setData(json);\r\n      setCurrentFile(filename);\r\n      message.success(`成功加载文件: ${filename}`);\r\n    } catch (error) {\r\n      console.error('Error loading file:', error);\r\n      message.error(`加载文件失败: ${filename}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const columns: ColumnsType<DiskPrice> = [\r\n    {\r\n      title: '产品名称',\r\n      dataIndex: 'product_name',\r\n      render: (text, record) => (\r\n        <a href={record.product_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {text}\r\n        </a>\r\n      ),\r\n      sorter: (a, b) => a.product_name.localeCompare(b.product_name),\r\n    },\r\n    {\r\n      title: '容量',\r\n      dataIndex: 'capacity',\r\n      sorter: (a, b) => {\r\n        // 处理容量值以便排序\r\n        const getValue = (str: string) => {\r\n          const num = parseFloat(str.replace(/[^0-9.]/g, ''));\r\n          if (str.includes('TB')) return num * 1000;\r\n          return num;\r\n        };\r\n        return getValue(a.capacity) - getValue(b.capacity);\r\n      },\r\n    },\r\n    {\r\n      title: '价格',\r\n      dataIndex: 'price',\r\n      sorter: (a, b) => {\r\n        const aNum = parseFloat(a.price.replace(/[^0-9.]/g, ''));\r\n        const bNum = parseFloat(b.price.replace(/[^0-9.]/g, ''));\r\n        return aNum - bNum;\r\n      },\r\n    },\r\n    {\r\n      title: '每TB价格',\r\n      dataIndex: 'price_per_tb',\r\n      sorter: (a, b) => {\r\n        const aNum = parseFloat(a.price_per_tb.replace(/[^0-9.]/g, ''));\r\n        const bNum = parseFloat(b.price_per_tb.replace(/[^0-9.]/g, ''));\r\n        return aNum - bNum;\r\n      },\r\n    },\r\n    {\r\n      title: '接口',\r\n      dataIndex: 'interface',\r\n      filters: [\r\n        { text: 'SATA', value: 'SATA' },\r\n        { text: 'NVMe', value: 'NVMe' },\r\n        { text: 'USB', value: 'USB' },\r\n      ],\r\n      onFilter: (value, record) => record.interface.includes(value as string),\r\n    },\r\n    {\r\n      title: '硬盘形态',\r\n      dataIndex: 'form_factor',\r\n    },\r\n    {\r\n      title: '卖家',\r\n      dataIndex: 'seller',\r\n      render: (text, record) => (\r\n        <a href={record.seller_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {text}\r\n        </a>\r\n      ),\r\n    },\r\n    {\r\n      title: '评分',\r\n      dataIndex: 'rating',\r\n    },\r\n  ];\r\n\r\n  const filteredData = data.filter(item => {\r\n    const matchesSearch = item.product_name?.toLowerCase().includes(searchText.toLowerCase());\r\n    const matchesType = filterType === 'all' || (item.interface && item.interface.includes(filterType));\r\n    return matchesSearch && matchesType;\r\n  });\r\n\r\n  // 创建文件选择菜单\r\n  const fileMenu = (\r\n    <Menu\r\n      onClick={({ key }) => loadFileData(key)}\r\n      items={dataFiles.map(file => ({\r\n        key: file.name,\r\n        label: `${file.name} (${new Date(file.date).toLocaleDateString()})`\r\n      }))}\r\n    />\r\n  );\r\n\r\n  // 计算价格统计数据\r\n  const getPriceStats = () => {\r\n    if (!data.length) return { min: 0, max: 0, avg: 0 };\r\n    \r\n    const prices = data.map(item => parseFloat(item.price.replace(/[^0-9.]/g, '')))\r\n                       .filter(num => !isNaN(num));\r\n    \r\n    return {\r\n      min: Math.min(...prices),\r\n      max: Math.max(...prices),\r\n      avg: prices.reduce((sum, price) => sum + price, 0) / prices.length\r\n    };\r\n  };\r\n\r\n  const priceStats = getPriceStats();\r\n\r\n  return (\r\n    <div style={{ padding: '24px' }}>\r\n      <Title level={2}>硬盘价格监控</Title>\r\n      \r\n      <Row gutter={[16, 16]}>\r\n        <Col span={6}>\r\n          <Card>\r\n            <Statistic title=\"总产品数\" value={data.length} />\r\n          </Card>\r\n        </Col>\r\n        <Col span={6}>\r\n          <Card>\r\n            <Statistic title=\"数据更新时间\" value={data[0]?.date_scraped || '-'} />\r\n          </Card>\r\n        </Col>\r\n        <Col span={6}>\r\n          <Card>\r\n            <Statistic \r\n              title=\"平均价格\" \r\n              value={priceStats.avg.toFixed(2)} \r\n              prefix=\"$\" \r\n            />\r\n          </Card>\r\n        </Col>\r\n        <Col span={6}>\r\n          <Card>\r\n            <Statistic \r\n              title=\"价格范围\" \r\n              value={`$${priceStats.min.toFixed(2)} - $${priceStats.max.toFixed(2)}`} \r\n            />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Card style={{ marginTop: '24px' }}>\r\n        <Space style={{ marginBottom: '16px' }}>\r\n          <Search\r\n            placeholder=\"搜索产品\"\r\n            onChange={e => setSearchText(e.target.value)}\r\n            style={{ width: 200 }}\r\n          />\r\n          <Select\r\n            defaultValue=\"all\"\r\n            style={{ width: 120 }}\r\n            onChange={value => setFilterType(value)}\r\n            options={[\r\n              { value: 'all', label: '全部类型' },\r\n              { value: 'SATA', label: 'SATA' },\r\n              { value: 'NVMe', label: 'NVMe' },\r\n              { value: 'USB', label: 'USB' },\r\n            ]}\r\n          />\r\n          <Button \r\n            type=\"primary\" \r\n            icon={<ReloadOutlined spin={loading} />} \r\n            onClick={fetchData}\r\n          >\r\n            刷新数据\r\n          </Button>\r\n          <Dropdown overlay={fileMenu} disabled={dataFiles.length === 0}>\r\n            <Button>\r\n              {currentFile} <DownOutlined />\r\n            </Button>\r\n          </Dropdown>\r\n        </Space>\r\n\r\n        <Table\r\n          columns={columns}\r\n          dataSource={filteredData}\r\n          loading={loading}\r\n          rowKey={(record, index) => `${record.product_name}-${index}`}\r\n          pagination={{ pageSize: 10 }}\r\n          scroll={{ x: true }}\r\n        />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}